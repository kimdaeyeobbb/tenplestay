# Generated by Django 4.2.8 on 2023-12-09 08:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


def create_dummy_data(apps, schema_editor):
    """기본적으로 존재하는 meta model 만들기"""

    # 미리 정의된 PK 값과 그룹 이름의 리스트
    NOTI_PLATFORM_CHOICES = [
        (1, 1, "email"),
        (2, 2, "kakaotalk"),
        (3, 3, "sms"),
    ]

    NotiPlatform = apps.get_model("notifications", "NotiPlatform")
    for pk, platform_num, name in NOTI_PLATFORM_CHOICES:
        # get_or_create 메소드를 사용하여 이미 존재하는지 확인 후 새로 생성
        NotiPlatform.objects.get_or_create(
            pk=pk, defaults={"platform_num": platform_num}
        )


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("scraping", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="NotiPlatform",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="생성일"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="수정일")),
                (
                    "platform_num",
                    models.IntegerField(
                        choices=[(1, "email"), (2, "kakaotalk"), (3, "sms")]
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Noti",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="생성일"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="수정일")),
                (
                    "retry_count",
                    models.IntegerField(
                        default=0,
                        help_text="알림 보내기 시도 횟수 저장하는 필드입니다.",
                        verbose_name="알림 시도 횟수",
                    ),
                ),
                (
                    "main_noti_platform",
                    models.ForeignKey(
                        help_text="사용자가 어떤 알림을 메인으로 받을지 저장하는 필드입니다.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="main_noti_platform",
                        to="notifications.notiplatform",
                        verbose_name="메인 알림 플랫폼",
                    ),
                ),
                (
                    "scraping_url",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="scraping.scrapingurl",
                    ),
                ),
                (
                    "sub_noti_platform",
                    models.ForeignKey(
                        help_text="사용자가 어떤 알림을 서브로 받을지 저장하는 필드입니다.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sub_noti_platform",
                        to="notifications.notiplatform",
                        verbose_name="서브 알림 플랫폼",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.RunPython(create_dummy_data),
    ]
